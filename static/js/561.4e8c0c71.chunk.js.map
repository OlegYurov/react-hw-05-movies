{"version":3,"file":"static/js/561.4e8c0c71.chunk.js","mappings":"6OAEaA,EAAUC,EAAAA,GAAAA,IAAH,8GAMPC,EAAOD,EAAAA,GAAAA,GAAH,iKASJE,EAAOF,EAAAA,GAAAA,GAAH,ybAmBJG,EAAMH,EAAAA,GAAAA,IAAH,qF,kMClCVI,EAAU,mCACVC,EAAW,+BACXC,EACM,oBADNA,EAGK,SAKEC,EAAiB,yCAAG,2GACNC,IAAM,GAAD,OAAIH,GAAJ,OAAeC,EAAf,oBAAyCF,IADxC,uBACrBK,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,qDAKjBC,EAAU,yCAAG,WAAOC,GAAP,8FACCH,IAAM,GAAD,OAAIH,GAAJ,OAAeC,EAAf,YAAgCK,EAAhC,oBAA8CP,IADpD,uBACdK,EADc,EACdA,KADc,kBAEfA,GAFe,2CAAH,sDAKVG,EAAO,yCAAG,WAAOD,GAAP,8FACIH,IAAM,GAAD,OAAIH,EAAJ,kBAAsBM,EAAtB,4BAA4CP,IADrD,uBACXK,EADW,EACXA,KADW,kBAGZA,GAHY,2CAAH,sDAKPI,EAAU,yCAAG,WAAOF,GAAP,8FACCH,IAAM,GAAD,OAAIH,EAAJ,kBAAsBM,EAAtB,4BAA4CP,IADlD,uBACdK,EADc,EACdA,KADc,kBAGfA,GAHe,2CAAH,sDAMVK,EAAc,yCAAG,WAAOC,GAAP,8FACHP,IAAM,GAAD,OAAIH,EAAJ,iCAAqCD,EAArC,kBAAsDW,IADxD,uBAClBN,EADkB,EAClBA,KADkB,kBAGnBA,GAHmB,2CAAH,qD,0KC5BZ,SAASO,IACpB,OAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAqCpB,OAhCIC,EAAAA,EAAAA,YAAU,YACX,uBAAC,oHAE6BC,EAAAA,KAF7B,gBAEWC,EAFX,EAEWA,QACRL,GAAU,OAAIK,IAHjB,wGAAD,EAQD,GAAE,KAwBF,iCAEM,4CACG,SAAC,KAAD,WACQ,SAAC,KAAD,UACFN,GACPA,EAAOO,KAAI,SAAAC,GAAK,OACN,SAAC,KAAD,WACE,UAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAMf,IAAMiB,MAAO,CAAEC,KAAMT,GAAhD,WACP,SAAC,KAAD,CAASU,IAAKJ,EAAMK,aAAN,yCACyBL,EAAMK,aAE3CC,IAAKN,EAAMO,KAAOP,EAAMO,KAAOP,EAAMQ,SACtC,uBAAKR,EAAMO,KAAOP,EAAMO,KAAOP,EAAMQ,YANlBR,EAAMf,GADf,UAgB1B,C","sources":["components/Cast/Cast.styled.js","services/api.js","views/HomeView.js"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\nmax-width: 1400px;\r\n  margin: 0 auto;\r\n  padding-top: 50px;\r\n  padding-bottom: 50px;\r\n`\r\nexport const List = styled.ul`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top: -30px;\r\n  margin-left: -30px;\r\n  flex-wrap: wrap;\r\n  `\r\n\r\nexport const Item = styled.li`\r\n  text-align: center;\r\n flex-basis: calc(100% / 4 - 30px);\r\n  margin-top: 30px;\r\n  margin-left: 30px;\r\n  border-radius: 5px;\r\n  overflow: hidden;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color:#ADD8E6;\r\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\r\n  transform: scale(1);\r\n  transition: all 250ms linear;\r\n    :hover,\r\n:focus {\r\n  transform: scale(1.1);\r\n  transition: all 250ms linear;\r\n  `\r\n\r\nexport const Img = styled.img`\r\n    width: 100%;\r\n  height: 450px;\r\n  overflow: hidden;\r\n\r\n}\r\n`","import axios from 'axios'\r\n\r\nconst API_KEY = '0d2fc6d2597c3f501e7437cf40d08b03';\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\nconst PARAM = {\r\n  trending: '/trending/all/day',\r\n  search: '/search/movie',\r\n  movieID: '/movie',\r\n  reviews: '/reviews',\r\n  credits: '/credits',\r\n};\r\n\r\nexport const getTrendingMovies = async () => {\r\n    const { data } = await axios(`${BASE_URL}${PARAM.trending}?api_key=${API_KEY}`)\r\n    return data\r\n};\r\n\r\nexport const getMovieId = async (id) => {\r\n    const { data } = await axios(`${BASE_URL}${PARAM.movieID}/${id}?api_key=${API_KEY}`)\r\n    return data;\r\n}\r\n\r\nexport const getCast = async (id) => {\r\n    const { data } = await axios(`${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`);\r\n \r\n    return data;\r\n}\r\nexport const getReviews = async (id) => {\r\n    const { data } = await axios(`${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`);\r\n \r\n    return data;\r\n}\r\n\r\nexport const getMovieSearch = async (request) => {\r\n    const { data } = await axios(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${request}`);\r\n\r\n    return data;\r\n}","import { useState, useEffect } from \"react\"\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport * as moviesAPI from '../services/api'\r\nimport * as css from '../components/Cast/Cast.styled'\r\n\r\nexport default function HomeView() {\r\n    const [movies, setMovies] = useState(null);\r\n    const location = useLocation();\r\n\r\n\r\n\r\n   \r\n     useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const { results } = await moviesAPI.getTrendingMovies();\r\n        setMovies([...results]);\r\n      } catch (error) {\r\n      \r\n      }\r\n    })();\r\n  }, []);\r\n\r\n\r\n//     return (\r\n//         <>\r\n//             <h2>Trending today</h2>\r\n//             {movies && (\r\n//                 <ul>\r\n//                     {movies.map(movie => (\r\n//                         <li key={movie.id}>\r\n//                         <Link to={`/movies/${movie.id}`} state={{ from: location }}>\r\n//                                 {movie.name ? movie.name : movie.title}\r\n//                             </Link>\r\n                           \r\n//                         </li> \r\n//                     ))}\r\n//                 </ul>\r\n//             )}\r\n           \r\n//         </>\r\n//     )\r\n// }\r\n\r\n return (\r\n   <>\r\n     \r\n         <h1>Trending today</h1>\r\n            <css.Wrapper>\r\n                    <css.List>    \r\n                 {movies  && (\r\n           movies.map(movie => (                     \r\n                     <css.Item key={movie.id}>\r\n                       <Link to={`/movies/${movie.id}`} state={{ from: location }}>\r\n                <css.Img src={movie.poster_path &&\r\n                     `https://image.tmdb.org/t/p/w300${movie.poster_path}`\r\n                  \r\n                } alt={movie.name ? movie.name : movie.title} />\r\n                 <p>{ movie.name ? movie.name : movie.title }</p>\r\n                 </Link>\r\n                 </css.Item>                       \r\n                 ) ) \r\n                      )}              \r\n                </css.List>\r\n           </css.Wrapper>                   \r\n        </>\r\n    )\r\n};\r\n"],"names":["Wrapper","styled","List","Item","Img","API_KEY","BASE_URL","PARAM","getTrendingMovies","axios","data","getMovieId","id","getCast","getReviews","getMovieSearch","request","HomeView","useState","movies","setMovies","location","useLocation","useEffect","moviesAPI","results","map","movie","to","state","from","src","poster_path","alt","name","title"],"sourceRoot":""}